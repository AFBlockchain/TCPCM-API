get:
  summary: List Projects
  operationId: listProjects
  description: | 
    List projects according to the given query. Available queries:
      1. By courseId
  tags:
    - projects
  parameters:
    - name: courseId
      in: query
      required: false
      schema:
        type: string
    - name: professor
      in: query
      required: false
      description: professor email
      schema:
        type: string
  responses:
    '200':
      description: An array of projects
      content:
        application/json:
          schema:
            $ref: "../../schemas/Project.yaml"
    default:
      $ref: "../../responses/UnexpectedError.yaml"
post:
  summary: Create Project
  operationId: createProject
  description: |
    Register a project under the given course by supplying `courseID`, `title` and `description`. Return the created project.

    This operation SHOULD only be carried out after the professor has properly linked students and experts to a course(class), so that in the backend the participation information can be properly propagated to the created project.

    Exceptions:
      * No authority
      * Course not found
      * Invalid arguments
  tags:
    - projects
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../schemas/Project.yaml"
  responses:
    '201':
      description: The created project (fully populated)
      content:
        application/json:
          schema:
            $ref: "../../schemas/Project.yaml"
    default:
      $ref : "../../responses/UnexpectedError.yaml"